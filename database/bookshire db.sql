-- CRIAÇÃO DO BANCO DE DADOS
CREATE DATABASE bookshire;
USE bookshire;

-- CRIAR TABELA USUARIOS COM SETE CAMPOS 
-- DENTRO DELA VAI OS CAMPOS(AS COLUNAS) DA TABELA E SEUS TIPOS(INT, DECIMAL, VARCHAR...)
CREATE TABLE usuarios 
( 
 Id_usuario INT PRIMARY KEY AUTO_INCREMENT,-- PRIMARY KEY É O IDENTIFICADOR ÚNICO DE UM REGISTRO NA TABELA.
 nome VARCHAR(250) NOT NULL,  -- O VARCHAR É USADO PARA ARMAZENAR CORDAS COM UM COMPRIMENTO VARIÁVEL. 
 email VARCHAR(250) NOT NULL,  
 senha VARCHAR(25) NOT NULL,
 telefone CHAR(11),-- CHAR É USADO PARA ARMAZENAR UMA STRING COM UM COMPRIMENTO FIX
 fotoUsuario VARCHAR(3000),
 mediaAvaliacao DECIMAL(2,1) NULL, -- DECIMAL ARMAZENA VALORES DE DADOS NUMÉRICOS EXATOS E COM PRECISÃO.

 UNIQUE (email)-- UNIQUE GARANTE QUE O CONTEUDO DA COLUNA ASSUMA UM VALOR DIFERENTE PARA CADA LINHA DA TABELA.

); 


-- CRIAR TABELA USUARIO_PF COM DOIS CAMPOS
CREATE TABLE usuario_PF 
( 
 	CPF DECIMAL(11,0)  PRIMARY KEY,  	Id_usuario INT --  INT É O TIPO DE DADOS INTEIROS PRIMÁRIOS.
); 

-- CRIAR TABELA USUARIO_PJ COM DOIS CAMPOS
CREATE TABLE usuario_PJ 
( 
 	CNPJ DECIMAL(14,0) PRIMARY KEY ,  
 	Id_usuario INT 
); 


-- REFERENCIAS DOS USUARIOS PF E PJ
-- ALTERAR TABELA USUARIO_PF
-- ADD CHAVE ESTRANGEIRA
ALTER TABLE usuario_PF -- ALTER TABLE USADA PARA ALTERAR UMA TABELA APÓS ELA TER SIDO CRIADA
-- FOREIGN KEY USADA PARA LIGAR DUAS TABELAS 
-- E CONTROLAR OS DADOS QUE PODEM SER ARMAZENADOS NA TABELA DE CHAVE ESTRANGEIRA.
	ADD FOREIGN KEY (Id_usuario) REFERENCES usuarios (Id_usuario);-- LIGAR TABELA USUARIO_PF COM TABELA USUARIOS
-- ALTERAR TABELA USUARIO_PJ
-- ADD CHAVE ESTRANGEIRA
ALTER TABLE usuario_PJ
	ADD FOREIGN KEY (Id_usuario) REFERENCES usuarios (Id_usuario);-- LIGAR TABELA USUARIO_PJ COM TABELA USUARIO


-- CRIAR TABELA ANUNCIOS COM DEZ CAMPOS
CREATE TABLE anuncios 
( 
-- AUTO_INCREMENT É USADO PARA QUE O VALOR DE UM CAMPO SEJA AUTOMATICAMENTE INSERIDO ASSIM QUE SE CRIA UM NOVO REGISTRO
	Id_anuncio INT PRIMARY KEY AUTO_INCREMENT, 
 	Id_livro varchar(40),
 	Id_usuario INT NOT NULL, -- NOT NULL GARANTE UMA COLUNA NÃO TENHA VALORES NULOS.
 	Id_mensagem INT null,
 
 	transacao varchar(20) NOT NULL, -- troca, venda, doacao
 	preco DECIMAL(10,2) NOT NULL, -- caso for doação/troca = 0
 	criacao datetime NOT NULL, -- DATETIME É USADO QUANDO PRECISO DE VALORES QUE CONTEM INFORMAÇÕES SOBRE DATA E DA HORA
 	descricao VARCHAR(1000),
 	situacao varchar(1000) NOT NULL, -- OBRIGATORIOOOOO
 	anuncio_status varchar(12) NOT NULL -- fechado, negociacao, aberto
 ); 


DESCRIBE usuarios; -- PARA VERIFICAR ESTRUTURA DE TABELAS E TIPOS DE CAMPOS
 
 -- ALTERAR TABELA ANUNCIOS
 ALTER TABLE anuncios
 -- ADD CHAVE ESTRANGEIRA
	ADD FOREIGN KEY (Id_usuario) REFERENCES usuarios (Id_usuario); -- REFERENCES FAZ REFERENCIA PARA A TABELA DESEJADA.
 -- SET DEFAULT CONFIGURA OS VALORES DA COLUNA DE REFERÊNCIA PARA SEUS VALORES PADRÕES.
ALTER TABLE anuncios ALTER COLUMN anuncio_status SET DEFAULT "aberto";
ALTER TABLE anuncios ALTER COLUMN preco SET DEFAULT 0; -- ALTER COLUMN ALTERA SÓ UMA COLUNA E NÃO A TABELA TODA

-- CRIAR TABELA ENDEREÇO COM SEIS CAMPOS
CREATE TABLE endereco
(
Id_endereco INT PRIMARY KEY AUTO_INCREMENT,
Id_usuario INT NOT NULL,
CEP CHAR(8) NOT NULL,
bairro VARCHAR(500) NOT NULL,
rua VARCHAR(50) NOT NULL,
complemento VARCHAR(50)
);

-- ALTERAR TABELA ENDEREÇO
ALTER TABLE endereco
	ADD FOREIGN KEY (Id_usuario) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA
    
-- CRIAR TABELA PEDIDO COM OITO CAMPOS
CREATE TABLE pedido
( 
 	Id_pedido INT PRIMARY KEY AUTO_INCREMENT,
 	Id_anunciante INT,
 	Id_cliente INT,
 	Id_anuncio INT NOT NULL,
 	descricaoAcordo VARCHAR(500) NULL,
 	dataSolicitacao datetime NOT NULL,
 	dataConclusao datetime NOT NULL,
 	notaAvaliacao DECIMAL(2,1) NULL -- NULL SIGNIFICA QUE ESSE CAMPO PODE ESTAR VAZIO
); 


-- conexões do pedido
-- ALTERAR TABELA PEDIDO
ALTER TABLE pedido
	ADD FOREIGN KEY (Id_anunciante) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA
    ALTER TABLE pedido
	ADD FOREIGN KEY (Id_cliente) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA
ALTER TABLE pedido
	ADD FOREIGN KEY (Id_anuncio) REFERENCES anuncios (Id_anuncio); -- ADD CHAVE ESTRANGEIRA
    


-- CRIAR TABELA DENUNCIA COM QUATRO CAMPOS
CREATE TABLE denuncia 
( 
 	Id_denuncia INT PRIMARY KEY AUTO_INCREMENT,
 	Id_pedido INT,
 	tituloDenuncia VARCHAR(30),
 	mensagem VARCHAR(1000)
); 

-- ALTERAR TABELA DENUNCIA
ALTER TABLE denuncia
	 ADD FOREIGN KEY (Id_pedido) REFERENCES pedido (Id_pedido); -- ADD CHAVE ESTRANGEIRA


-- CRIAR TABELA CHAT COM QUATRO CAMPOS
CREATE TABLE chat
(
 	Id_chat INT PRIMARY KEY AUTO_INCREMENT,
 	Id_usuario1 INT NOT NULL,
 	Id_usuario2 INT NOT NULL,
 	Id_pedido INT NOT NULL,
 	FOREIGN KEY (Id_pedido) REFERENCES pedido (Id_pedido) -- ADD CHAVE ESTRANGEIRA
 
);


-- CRIAR TABELA MENSAGEM1 COM CINCO CAMPOS
CREATE TABLE mensagem1 -- PROCEDURE
( 
 	Id_mensagem INT PRIMARY KEY AUTO_INCREMENT,
 	Id_chat INT,
 	armazenar VARCHAR(500),  
 	momento_envio datetime,

 	Id_usuario1 INT,
	FOREIGN KEY (Id_usuario1) REFERENCES pedido (Id_anunciante) -- ADD CHAVE ESTRANGEIRA
); 


-- CRIAR TABELA MENSAGEM2 COM CINCO CAMPOS
CREATE TABLE mensagem2
( 
 	Id_mensagem INT PRIMARY KEY AUTO_INCREMENT,
 	Id_chat INT,
 	armazenar VARCHAR(500),  
 	momento_envio datetime,

 	Id_usuario2 INT,
 	FOREIGN KEY (Id_usuario2) REFERENCES pedido (Id_cliente) -- ADD CHAVE ESTRANGEIRA
); 

-- ALTERAR TABELA MENSAGEM1
ALTER TABLE mensagem1
	ADD FOREIGN KEY (Id_chat) REFERENCES chat (Id_chat);-- ADD CHAVE ESTRANGEIRA
-- ALTERAR TABELA MENSAGEM2
ALTER TABLE mensagem2
	ADD FOREIGN KEY (Id_chat) REFERENCES chat (Id_chat);-- ADD CHAVE ESTRANGEIRA

-- CRIAR TABELA PAGAMENTO COM SETE CAMPOS
CREATE TABLE pagamento 
( 
 	Id_pagamento INT PRIMARY KEY AUTO_INCREMENT,
 	Id_pedido INT UNIQUE,
 	Id_vendedor INT NOT NULL,
 	Id_cliente INT NOT NULL,
 	tipoDePagamento VARCHAR(12) NOT NULL, -- pix, dinheiro, debito ou credito
 	dataPagamento DATETIME NOT NULL,
 	numero_cartao INT NULL
);  



-- REFERENCIA de Pagamento
-- ALTERAR TABELA PAGAMENTO
ALTER TABLE pagamento
	ADD FOREIGN KEY (Id_pedido) REFERENCES pedido (Id_pedido); -- ADD CHAVE ESTRANGEIRA
ALTER TABLE pagamento
	ADD FOREIGN KEY (Id_vendedor) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA
ALTER TABLE pagamento
	ADD FOREIGN KEY (Id_cliente) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA


-- CRIAR TABELA CARTÃO COM SEIS CAMPOS
CREATE TABLE cartao(
	numero_cartao INT PRIMARY KEY,
	Id_usuario INT,
	tipo_cartao VARCHAR(12), -- debito ou credito senhora?
	titular VARCHAR(150),
	dataExpiracao DATE NOT NULL, -- DATE ARMAZENA APENAS A DATA SEM INFORMAÇÕES DO FUSO.
	CVV CHAR(3) NOT NULL
);


-- ALTERAR TABELA CARTÃO
ALTER TABLE cartao
	ADD FOREIGN KEY (Id_usuario) REFERENCES usuarios (Id_usuario); -- ADD CHAVE ESTRANGEIRA
-- ALTERAR TABELA PAGAMENTO
ALTER TABLE pagamento
	ADD FOREIGN KEY (numero_cartao) REFERENCES cartao (numero_cartao); -- ADD CHAVE ESTRANGEIRA


-- DELIMITER $$ SERVE PARA INFORMAR PARA INFORMAR PARA O PROGRAMA QUANDO ELE DEVE CONSIDERAR UM COMANDO APENAS
-- APÓS A LINHA EM QUE VOCÊ DEFINI-LO
DELIMITER $$ 
-- CRIAÇÃO DO TRIGGER
-- UM TRIGGER(GATILHO) É UM OBJETO ASSOCIADO A UMA TABELA,
-- QUE É UTILIZADO PARA RESPONDER A UM EVENTO ESPECÍFICO QUANDO FOR DISPARADO.
CREATE TRIGGER tgAvaliacao AFTER UPDATE ON pedido
	FOR EACH ROW
BEGIN

	DECLARE notaPedido DECIMAL(2,1); -- DECLARANDO NOVA VARIAVEL
    SET notaPedido = (SELECT notaAvaliacao FROM pedido WHERE Id_pedido = new.Id_pedido);
    
    IF notaPedido IS NOT NULL THEN 
		UPDATE usuarios SET mediaAvaliacao = (SELECT AVG(notaAvaliacao) FROM pedido WHERE Id_anunciante = new.Id_anunciante) WHERE Id_usuario = new.Id_anunciante;
		UPDATE anuncios SET anuncio_status = "fechado" WHERE Id_anuncio =  new.Id_anuncio;
	END IF;

END
$$

-- ADD MAIS ALGUMAS COISAS NA TABELA
ALTER TABLE endereco
	CHANGE rua logradouro VARCHAR(50) NOT NULL; -- CHANGE SERVE PARA RENOMEAR O NOME DO CAMPO DEPOIS DA TABELA JÁ TER SIDO CRIADA.
ALTER TABLE endereco
	ADD COLUMN cidade VARCHAR(50);